// Mocks generated by Mockito 5.4.5 from annotations
// in devlink_mobile_app/test/notification/domain/usecase/get_notifications_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:devlink_mobile_app/core/result/result.dart' as _i4;
import 'package:devlink_mobile_app/notification/domain/model/app_notification.dart'
    as _i5;
import 'package:devlink_mobile_app/notification/domain/repository/notification_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [NotificationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationRepository extends _i1.Mock
    implements _i2.NotificationRepository {
  MockNotificationRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<List<_i5.AppNotification>>> getNotifications(
    String? userId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getNotifications, [userId]),
            returnValue:
                _i3.Future<_i4.Result<List<_i5.AppNotification>>>.value(
                  _i6.dummyValue<_i4.Result<List<_i5.AppNotification>>>(
                    this,
                    Invocation.method(#getNotifications, [userId]),
                  ),
                ),
          )
          as _i3.Future<_i4.Result<List<_i5.AppNotification>>>);

  @override
  _i3.Future<_i4.Result<bool>> markAsRead(String? notificationId) =>
      (super.noSuchMethod(
            Invocation.method(#markAsRead, [notificationId]),
            returnValue: _i3.Future<_i4.Result<bool>>.value(
              _i6.dummyValue<_i4.Result<bool>>(
                this,
                Invocation.method(#markAsRead, [notificationId]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<bool>>);

  @override
  _i3.Future<_i4.Result<bool>> markAllAsRead(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#markAllAsRead, [userId]),
            returnValue: _i3.Future<_i4.Result<bool>>.value(
              _i6.dummyValue<_i4.Result<bool>>(
                this,
                Invocation.method(#markAllAsRead, [userId]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<bool>>);

  @override
  _i3.Future<_i4.Result<bool>> deleteNotification(String? notificationId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteNotification, [notificationId]),
            returnValue: _i3.Future<_i4.Result<bool>>.value(
              _i6.dummyValue<_i4.Result<bool>>(
                this,
                Invocation.method(#deleteNotification, [notificationId]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<bool>>);
}
